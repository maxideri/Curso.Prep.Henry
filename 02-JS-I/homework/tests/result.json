{"numFailedTestSuites":1,"numFailedTests":2,"numPassedTestSuites":0,"numPassedTests":25,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":27,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1610551286435,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["nuevaString"],"failureMessages":[],"fullName":"nuevaString Deberia ser un string","location":null,"status":"passed","title":"Deberia ser un string"},{"ancestorTitles":["nuevoNum"],"failureMessages":[],"fullName":"nuevoNum Deberia ser un numero","location":null,"status":"passed","title":"Deberia ser un numero"},{"ancestorTitles":["nuevoBool"],"failureMessages":[],"fullName":"nuevoBool Deberia ser un booleano","location":null,"status":"passed","title":"Deberia ser un booleano"},{"ancestorTitles":["nuevaResta"],"failureMessages":[],"fullName":"nuevaResta Deberia ser un booleano","location":null,"status":"passed","title":"Deberia ser un booleano"},{"ancestorTitles":["nuevaMultiplicacion"],"failureMessages":[],"fullName":"nuevaMultiplicacion Deberia ser un booleano","location":null,"status":"passed","title":"Deberia ser un booleano"},{"ancestorTitles":["nuevoModulo"],"failureMessages":[],"fullName":"nuevoModulo Deberia ser un booleano","location":null,"status":"passed","title":"Deberia ser un booleano"},{"ancestorTitles":["devolverString(str)"],"failureMessages":[],"fullName":"devolverString(str) Deberia devolver el string provisto","location":null,"status":"passed","title":"Deberia devolver el string provisto"},{"ancestorTitles":["suma(x, y)"],"failureMessages":[],"fullName":"suma(x, y) Deberia devolver la suma de los dos argumentos","location":null,"status":"passed","title":"Deberia devolver la suma de los dos argumentos"},{"ancestorTitles":["resta(x, y)"],"failureMessages":[],"fullName":"resta(x, y) Deberia devolver la diferencia de los dos argumentos","location":null,"status":"passed","title":"Deberia devolver la diferencia de los dos argumentos"},{"ancestorTitles":["divide(x, y)"],"failureMessages":[],"fullName":"divide(x, y) Deberia devolver la division de los dos argumentos","location":null,"status":"passed","title":"Deberia devolver la division de los dos argumentos"},{"ancestorTitles":["multiplica(x, y)"],"failureMessages":[],"fullName":"multiplica(x, y) Deberia devolver el producto de los dos argumentos","location":null,"status":"passed","title":"Deberia devolver el producto de los dos argumentos"},{"ancestorTitles":["sonIguales(x, y)"],"failureMessages":[],"fullName":"sonIguales(x, y) Deberia devolver true si los argumentos son iguales y sino false","location":null,"status":"passed","title":"Deberia devolver true si los argumentos son iguales y sino false"},{"ancestorTitles":["tienenMismaLongitud(str1, str2)"],"failureMessages":[],"fullName":"tienenMismaLongitud(str1, str2) Deberia devolver true si los strings tienen la misma longitud y sino false","location":null,"status":"passed","title":"Deberia devolver true si los strings tienen la misma longitud y sino false"},{"ancestorTitles":["menosQueNoventa(num)"],"failureMessages":[],"fullName":"menosQueNoventa(num) Deberia devolver true si el numero es menor a noventa sino false","location":null,"status":"passed","title":"Deberia devolver true si el numero es menor a noventa sino false"},{"ancestorTitles":["mayorQueCincuenta(num)"],"failureMessages":[],"fullName":"mayorQueCincuenta(num) Deberia devolver true si el numero es mayor a cincuenta sino false","location":null,"status":"passed","title":"Deberia devolver true si el numero es mayor a cincuenta sino false"},{"ancestorTitles":["obtenerResto(x, y)"],"failureMessages":[],"fullName":"obtenerResto(x, y) Deberia devolver el resto de dividir x sobre y","location":null,"status":"passed","title":"Deberia devolver el resto de dividir x sobre y"},{"ancestorTitles":["esPar(num)"],"failureMessages":[],"fullName":"esPar(num) Deberia devolver true si el numero es par sino false","location":null,"status":"passed","title":"Deberia devolver true si el numero es par sino false"},{"ancestorTitles":["esImpar(num)"],"failureMessages":[],"fullName":"esImpar(num) Deberia devolver true si el numero es impar sino false","location":null,"status":"passed","title":"Deberia devolver true si el numero es impar sino false"},{"ancestorTitles":["elevarAlCuadrado(num)"],"failureMessages":[],"fullName":"elevarAlCuadrado(num) Deberia devolver el numero elevado al cuadrado","location":null,"status":"passed","title":"Deberia devolver el numero elevado al cuadrado"},{"ancestorTitles":["elevarAlCubo(num)"],"failureMessages":[],"fullName":"elevarAlCubo(num) Deberia devolver el numero elevado al cubo","location":null,"status":"passed","title":"Deberia devolver el numero elevado al cubo"},{"ancestorTitles":["elevar(num, exponent)"],"failureMessages":[],"fullName":"elevar(num, exponent) Deberia devolver el numero elevado al exponente indicado","location":null,"status":"passed","title":"Deberia devolver el numero elevado al exponente indicado"},{"ancestorTitles":["redondearNumero(num)"],"failureMessages":[],"fullName":"redondearNumero(num) Deberia devolver el numero redondeado","location":null,"status":"passed","title":"Deberia devolver el numero redondeado"},{"ancestorTitles":["redondearHaciaArriba(num)"],"failureMessages":[],"fullName":"redondearHaciaArriba(num) Deberia devolver el numero redondeado para arriba","location":null,"status":"passed","title":"Deberia devolver el numero redondeado para arriba"},{"ancestorTitles":["agregarSimboloExclamacion(str)"],"failureMessages":[],"fullName":"agregarSimboloExclamacion(str) Deberia agregar un signo de exclamacion al final del string","location":null,"status":"passed","title":"Deberia agregar un signo de exclamacion al final del string"},{"ancestorTitles":["combinarNombres(firstName, lastName)"],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"hello world\"\nReceived: \"Soy hello world\"\n    at Object.<anonymous> (C:\\Users\\Maximiliano\\Documents\\Programacion\\Curso.Prep.Henry\\02-JS-I\\homework\\tests\\JSI.test.js:214:47)\n    at Object.asyncJestTest (C:\\Users\\Maximiliano\\Documents\\Programacion\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at C:\\Users\\Maximiliano\\Documents\\Programacion\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (C:\\Users\\Maximiliano\\Documents\\Programacion\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at C:\\Users\\Maximiliano\\Documents\\Programacion\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41"],"fullName":"combinarNombres(firstName, lastName) Deberia devolver los strings combinados con un espacio en el medio","location":null,"status":"failed","title":"Deberia devolver los strings combinados con un espacio en el medio"},{"ancestorTitles":["obtenerSaludo(name)"],"failureMessages":[],"fullName":"obtenerSaludo(name) Deberia devolver el string 'Hola {name}!'","location":null,"status":"passed","title":"Deberia devolver el string 'Hola {name}!'"},{"ancestorTitles":["obtenerAreaRectangulo(alto, ancho)"],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 4\nReceived: undefined\n    at Object.<anonymous> (C:\\Users\\Maximiliano\\Documents\\Programacion\\Curso.Prep.Henry\\02-JS-I\\homework\\tests\\JSI.test.js:228:41)\n    at Object.asyncJestTest (C:\\Users\\Maximiliano\\Documents\\Programacion\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at C:\\Users\\Maximiliano\\Documents\\Programacion\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (C:\\Users\\Maximiliano\\Documents\\Programacion\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at C:\\Users\\Maximiliano\\Documents\\Programacion\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41"],"fullName":"obtenerAreaRectangulo(alto, ancho) Deberia retornar el area correcta del rectangulo","location":null,"status":"failed","title":"Deberia retornar el area correcta del rectangulo"}],"endTime":1610551289546,"message":"  ● combinarNombres(firstName, lastName) › Deberia devolver los strings combinados con un espacio en el medio\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"hello world\"\n    Received: \"Soy hello world\"\n\n      212 | describe('combinarNombres(firstName, lastName)', function() {\n      213 |   it('Deberia devolver los strings combinados con un espacio en el medio', function() {\n    > 214 |     expect(combinarNombres('hello', 'world')).toBe('hello world');\n          |                                               ^\n      215 |     expect(combinarNombres('Soy', 'Henry')).toBe('Soy Henry');\n      216 |   });\n      217 | });\n\n      at Object.<anonymous> (02-JS-I/homework/tests/JSI.test.js:214:47)\n\n  ● obtenerAreaRectangulo(alto, ancho) › Deberia retornar el area correcta del rectangulo\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 4\n    Received: undefined\n\n      226 | describe('obtenerAreaRectangulo(alto, ancho)', function() {\n      227 |   it('Deberia retornar el area correcta del rectangulo', function() {\n    > 228 |     expect(obtenerAreaRectangulo(2, 2)).toBe(4);\n          |                                         ^\n      229 |     expect(obtenerAreaRectangulo(3, 6)).toBe(18);\n      230 |     expect(obtenerAreaRectangulo(0, 2)).toBe(0);\n      231 |   });\n\n      at Object.<anonymous> (02-JS-I/homework/tests/JSI.test.js:228:41)\n","name":"C:\\Users\\Maximiliano\\Documents\\Programacion\\Curso.Prep.Henry\\02-JS-I\\homework\\tests\\JSI.test.js","startTime":1610551288078,"status":"failed","summary":""}],"wasInterrupted":false}